{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\src\\\\components\\\\elements\\\\Button\\\\Button.js\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Button.module.scss\";\nimport THEME from \"../../../state/theme\";\nvar BUTTON_TYPES = {\n  solid_color_tb: {\n    background: THEME.color,\n    borderColor: THEME.color,\n    color: \"#000\"\n  },\n  solid_color_tw: {\n    background: THEME.color,\n    borderColor: THEME.color,\n    color: \"#fff\"\n  },\n  solid_black_tw: {\n    background: \"rgb(40,40,50)\",\n    borderColor: \"rgb(40,40,50)\",\n    color: \"#fff\"\n  },\n  solid_white_tb: {\n    background: \"#fff\",\n    borderColor: \"#fff\",\n    color: \"#000\"\n  },\n  solid_gray_tb: {\n    background: \"#e6e6e6\",\n    borderColor: \"#e6e6e6\",\n    color: \"#000\"\n  },\n  outline_color_tb: {\n    background: \"transparent\",\n    borderColor: THEME.color,\n    color: \"#000\"\n  },\n  outline_color_tw: {\n    background: \"transparent\",\n    borderColor: THEME.color,\n    color: \"#fff\"\n  },\n  outline_black_tb: {\n    background: \"transparent\",\n    borderColor: \"#000\",\n    color: \"#000\"\n  },\n  outline_black_tc: {\n    background: \"transparent\",\n    borderColor: \"#000\",\n    color: THEME.color\n  },\n  outline_white_tw: {\n    background: \"transparent\",\n    borderColor: \"#fff\",\n    color: \"#fff\"\n  },\n  outline_white_tc: {\n    background: \"transparent\",\n    borderColor: \"#fff\",\n    color: THEME.color\n  },\n  outline_gray_tb: {\n    background: \"transparent\",\n    borderColor: \"#e6e6e6\",\n    color: \"#000\"\n  }\n};\nexport default (function (_ref) {\n  var children = _ref.children,\n      before = _ref.before,\n      after = _ref.after,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? \"solid-color-tb\" : _ref$type,\n      _ref$hoverType = _ref.hoverType,\n      hoverType = _ref$hoverType === void 0 ? \"outline-color-tb\" : _ref$hoverType,\n      round = _ref.round,\n      small = _ref.small,\n      click = _ref.click,\n      _ref$to = _ref.to,\n      to = _ref$to === void 0 ? \"#\" : _ref$to;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      hover = _useState2[0],\n      setHover = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      styleStatic = _useState4[0],\n      setStyleStatic = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      styleHover = _useState6[0],\n      setStyleHover = _useState6[1];\n\n  useEffect(function () {\n    setStyleStatic(setStyle(type));\n    setStyleHover(setStyle(hoverType));\n  }, [type, hoverType]);\n\n  var setStyle = function setStyle(buttonState) {\n    switch (buttonState) {\n      case \"solid-color-tb\":\n        return BUTTON_TYPES.solid_color_tb;\n\n      case \"solid-color-tw\":\n        return BUTTON_TYPES.solid_color_tw;\n\n      case \"solid-black-tw\":\n        return BUTTON_TYPES.solid_black_tw;\n\n      case \"solid-white-tb\":\n        return BUTTON_TYPES.solid_white_tb;\n\n      case \"solid-gray-tb\":\n        return BUTTON_TYPES.solid_gray_tb;\n\n      case \"outline-color-tb\":\n        return BUTTON_TYPES.outline_color_tb;\n\n      case \"outline-color-tw\":\n        return BUTTON_TYPES.outline_color_tw;\n\n      case \"outline-black-tb\":\n        return BUTTON_TYPES.outline_black_tb;\n\n      case \"outline-black-tc\":\n        return BUTTON_TYPES.outline_black_tc;\n\n      case \"outline-white-tw\":\n        return BUTTON_TYPES.outline_white_tw;\n\n      case \"outline-white-tc\":\n        return BUTTON_TYPES.outline_white_tc;\n\n      case \"outline-gray-tb\":\n        return BUTTON_TYPES.outline_white_tb;\n\n      default:\n        return BUTTON_TYPES.solid_color_tb;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Link, {\n    onMouseEnter: function onMouseEnter() {\n      return setHover(!hover);\n    },\n    onMouseLeave: function onMouseLeave() {\n      return setHover(!hover);\n    },\n    className: [styles.button, children ? styles.text : styles.icon, round && styles.round, small && styles.small].join(\" \"),\n    \"data-after\": after,\n    \"data-before\": before,\n    style: hover ? styleHover : styleStatic,\n    to: to,\n    onClick: click,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, children);\n});","map":{"version":3,"sources":["C:/Users/kang/Luna/GWproject/fe/src/components/elements/Button/Button.js"],"names":["React","useState","useEffect","Link","styles","THEME","BUTTON_TYPES","solid_color_tb","background","color","borderColor","solid_color_tw","solid_black_tw","solid_white_tb","solid_gray_tb","outline_color_tb","outline_color_tw","outline_black_tb","outline_black_tc","outline_white_tw","outline_white_tc","outline_gray_tb","children","before","after","type","hoverType","round","small","click","to","hover","setHover","styleStatic","setStyleStatic","styleHover","setStyleHover","setStyle","buttonState","outline_white_tb","button","text","icon","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Button.module.scss\";\nimport THEME from \"../../../state/theme\";\n\nconst BUTTON_TYPES = {\n  solid_color_tb: {\n    background: THEME.color,\n    borderColor: THEME.color,\n    color: \"#000\",\n  },\n  solid_color_tw: {\n    background: THEME.color,\n    borderColor: THEME.color,\n    color: \"#fff\",\n  },\n  solid_black_tw: {\n    background: \"rgb(40,40,50)\",\n    borderColor: \"rgb(40,40,50)\",\n    color: \"#fff\",\n  },\n  solid_white_tb: {\n    background: \"#fff\",\n    borderColor: \"#fff\",\n    color: \"#000\",\n  },\n  solid_gray_tb: {\n    background: \"#e6e6e6\",\n    borderColor: \"#e6e6e6\",\n    color: \"#000\",\n  },\n  outline_color_tb: {\n    background: \"transparent\",\n    borderColor: THEME.color,\n    color: \"#000\",\n  },\n  outline_color_tw: {\n    background: \"transparent\",\n    borderColor: THEME.color,\n    color: \"#fff\",\n  },\n  outline_black_tb: {\n    background: \"transparent\",\n    borderColor: \"#000\",\n    color: \"#000\",\n  },\n  outline_black_tc: {\n    background: \"transparent\",\n    borderColor: \"#000\",\n    color: THEME.color,\n  },\n  outline_white_tw: {\n    background: \"transparent\",\n    borderColor: \"#fff\",\n    color: \"#fff\",\n  },\n  outline_white_tc: {\n    background: \"transparent\",\n    borderColor: \"#fff\",\n    color: THEME.color,\n  },\n  outline_gray_tb: {\n    background: \"transparent\",\n    borderColor: \"#e6e6e6\",\n    color: \"#000\",\n  },\n};\n\nexport default ({\n  children,\n  before,\n  after,\n  type = \"solid-color-tb\",\n  hoverType = \"outline-color-tb\",\n  round,\n  small,\n  click,\n  to = \"#\",\n}) => {\n  const [hover, setHover] = useState(false);\n  const [styleStatic, setStyleStatic] = useState(null);\n  const [styleHover, setStyleHover] = useState(null);\n\n  useEffect(() => {\n    setStyleStatic(setStyle(type));\n    setStyleHover(setStyle(hoverType));\n  }, [type, hoverType]);\n\n  const setStyle = (buttonState) => {\n    switch (buttonState) {\n      case \"solid-color-tb\":\n        return BUTTON_TYPES.solid_color_tb;\n      case \"solid-color-tw\":\n        return BUTTON_TYPES.solid_color_tw;\n      case \"solid-black-tw\":\n        return BUTTON_TYPES.solid_black_tw;\n      case \"solid-white-tb\":\n        return BUTTON_TYPES.solid_white_tb;\n      case \"solid-gray-tb\":\n        return BUTTON_TYPES.solid_gray_tb;\n      case \"outline-color-tb\":\n        return BUTTON_TYPES.outline_color_tb;\n      case \"outline-color-tw\":\n        return BUTTON_TYPES.outline_color_tw;\n      case \"outline-black-tb\":\n        return BUTTON_TYPES.outline_black_tb;\n      case \"outline-black-tc\":\n        return BUTTON_TYPES.outline_black_tc;\n      case \"outline-white-tw\":\n        return BUTTON_TYPES.outline_white_tw;\n      case \"outline-white-tc\":\n        return BUTTON_TYPES.outline_white_tc;\n      case \"outline-gray-tb\":\n        return BUTTON_TYPES.outline_white_tb;\n      default:\n        return BUTTON_TYPES.solid_color_tb;\n    }\n  };\n\n  return (\n    <Link\n      onMouseEnter={() => setHover(!hover)}\n      onMouseLeave={() => setHover(!hover)}\n      className={[\n        styles.button,\n        children ? styles.text : styles.icon,\n        round && styles.round,\n        small && styles.small,\n      ].join(\" \")}\n      data-after={after}\n      data-before={before}\n      style={hover ? styleHover : styleStatic}\n      to={to}\n      onClick={click}\n    >\n      {children}\n    </Link>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}