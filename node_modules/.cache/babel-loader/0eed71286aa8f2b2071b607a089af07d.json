{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\src\\\\webapp\\\\pce\\\\pages\\\\PlaceDetail.js\";\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../styles/PlaceDetail.module.scss\";\nimport { Header } from \"components/widgets\";\nimport { useParams } from \"react-router-dom\";\nimport { useCustomState } from \"state/state\";\nimport Layout from \"components/layouts/Layout/Layout\";\nimport THEME from \"state/theme\";\nimport axios from \"axios\";\nexport default (function () {\n  var state = useCustomState()[0];\n\n  var _useParams = useParams(),\n      contentid = _useParams.contentid;\n\n  var place = {};\n  useEffect(function () {\n    axios.get(\"/dtl/\".concat(contentid)).then(function (resp) {});\n  });\n  var article = post.full.split(\"<p>\").map(function (paragraph, index) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      className: index === 0 ? styles.lead : null,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, paragraph);\n  });\n  var relatedPosts = related.filter(function (item) {\n    return item.contentid !== post.contentid;\n  }).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: \"/blog/\" + item.contentid,\n      key: index,\n      className: styles.card,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"figure\", {\n      style: {\n        background: \"url(\" + item.firstimage + \") center/cover\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        borderColor: THEME.color\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    }, item.title));\n  });\n\n  if (post.quote) {\n    article.splice(3, 0, /*#__PURE__*/React.createElement(\"span\", {\n      key: Math.random(),\n      className: styles.quote,\n      style: {\n        color: THEME.color\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, \"\\\" \", post.quote, \" \\\"\"));\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    img: post.firstimage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, post.title), /*#__PURE__*/React.createElement(Layout, {\n    col: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.breadcrumbs,\n    style: {\n      color: THEME.color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/blog-grid-left-sidebar\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Blog\"), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-long-arrow-alt-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/blog/cats/\" + post.category_id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, category.title), /*#__PURE__*/React.createElement(\"i\", {\n    className: \"las la-long-arrow-alt-right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, post.title))), /*#__PURE__*/React.createElement(Layout, {\n    col: \"2\",\n    padding: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    className: styles.image,\n    style: {\n      background: \"url(\" + post.image + \") center/cover\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"article\", {\n    className: styles.article,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, article)), /*#__PURE__*/React.createElement(Layout, {\n    col: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, relatedPosts[0], relatedPosts[1]));\n});","map":{"version":3,"sources":["C:/Users/kang/Luna/GWproject/fe/src/webapp/pce/pages/PlaceDetail.js"],"names":["React","Fragment","useEffect","useState","Link","styles","Header","useParams","useCustomState","Layout","THEME","axios","state","contentid","place","get","then","resp","article","post","full","split","map","paragraph","index","lead","relatedPosts","related","filter","item","card","background","firstimage","borderColor","color","title","quote","splice","Math","random","breadcrumbs","category_id","category","image"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../styles/PlaceDetail.module.scss\";\nimport { Header } from \"components/widgets\";\nimport { useParams } from \"react-router-dom\";\nimport { useCustomState } from \"state/state\";\nimport Layout from \"components/layouts/Layout/Layout\";\nimport THEME from \"state/theme\";\nimport axios from \"axios\";\n\nexport default () => {\n  const state = useCustomState()[0];\n  const { contentid } = useParams();\n  let place = {}\n\n  useEffect(()=> {\n    axios.get(`/dtl/${contentid}`)\n    .then((resp)=>{})\n  })\n  const article = post.full.split(\"<p>\").map((paragraph, index) => (\n    <p className={index === 0 ? styles.lead : null} key={index}>\n      {paragraph}\n    </p>\n  ));\n\n  const relatedPosts = related\n    .filter((item) => item.contentid !== post.contentid)\n    .map((item, index) => (\n      <Link to={\"/blog/\" + item.contentid} key={index} className={styles.card}>\n        <figure\n          style={{ background: \"url(\" + item.firstimage + \") center/cover\" }}\n        />\n        <span style={{ borderColor: THEME.color }}>{item.title}</span>\n      </Link>\n    ));\n\n  if (post.quote) {\n    article.splice(\n      3,\n      0,\n      <span\n        key={Math.random()}\n        className={styles.quote}\n        style={{ color: THEME.color }}\n      >\n        \" {post.quote} \"\n      </span>\n    );\n  }\n\n  return (\n    <Fragment>\n      <Header img={post.firstimage}>{post.title}</Header>\n\n      <Layout col=\"1\">\n        <div className={styles.breadcrumbs} style={{ color: THEME.color }}>\n          <Link to=\"/blog-grid-left-sidebar\">Blog</Link>\n          <i className=\"las la-long-arrow-alt-right\" />\n          <Link to={\"/blog/cats/\" + post.category_id}>{category.title}</Link>\n          <i className=\"las la-long-arrow-alt-right\" />\n          <span>{post.title}</span>\n        </div>\n      </Layout>\n\n      <Layout col=\"2\" padding>\n        <div>\n          <figure\n            className={styles.image}\n            style={{ background: \"url(\" + post.image + \") center/cover\" }}\n          />\n        </div>\n        <article className={styles.article}>{article}</article>\n      </Layout>\n\n      \n      <Layout col=\"2\">\n        {relatedPosts[0]}\n        {relatedPosts[1]}\n      </Layout>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}