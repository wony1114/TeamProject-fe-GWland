{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\kang\\\\Luna\\\\GWproject\\\\fe\\\\src\\\\components\\\\widgets\\\\Portfolio2\\\\Portfolio2.js\";\n\nimport React, { useState, useEffect, Fragment } from \"react\";\nimport { SpringGrid, enterExitStyle } from \"react-stonecutter\";\nimport { Link } from \"react-router-dom\";\nimport useCurrentWidth from \"../../../utilities/useCurrentWidth\";\nimport useHover from \"../../../utilities/useHover\";\nimport styles from \"./Portfolio2.module.scss\";\nimport THEME from \"../../../state/theme\";\nexport default (function (_ref) {\n  var _Array$prototype;\n\n  var _ref$data = _ref.data,\n      data = _ref$data === void 0 ? [] : _ref$data;\n\n  // Active category (start with all)\n  var _useState = useState(\"All Projects\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1]; // Width of single portfolio item, calculation based on screen size\n\n\n  var width = useCurrentWidth();\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      itemWidth = _useState4[0],\n      setItemWidth = _useState4[1];\n\n  useEffect(function () {\n    switch (true) {\n      case width > 1920:\n        setItemWidth(width / 5);\n        break;\n\n      case width > 992:\n        setItemWidth(width / 4);\n        break;\n\n      case width > 768:\n        setItemWidth(width / 3);\n        break;\n\n      case width > 576:\n        setItemWidth(width / 2);\n        break;\n\n      default:\n        setItemWidth(width);\n        break;\n    }\n  }, [width]); //------------------------------------------------------------\n  // Animation styles for masonry component\n\n  var _enterExitStyle$simpl = enterExitStyle.simple,\n      enter = _enterExitStyle$simpl.enter,\n      entered = _enterExitStyle$simpl.entered,\n      exit = _enterExitStyle$simpl.exit; // Take category tags from every item in database, and make array with unique values\n\n  var categories = _toConsumableArray(new Set((_Array$prototype = Array.prototype).concat.apply(_Array$prototype, _toConsumableArray(data.map(function (item) {\n    return item.cats.split(\" \").map(function (cat) {\n      return cat;\n    });\n  }))))); // Creating array of jsx items for masonry grid\n\n\n  var portfolioList = shuffleArray(data.filter(function (item) {\n    return item.cats.includes(active) || active === \"All Projects\";\n  }).map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      style: {\n        width: itemWidth,\n        height: width > 576 ? itemWidth : itemWidth / 1.5\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item.img,\n      alt: \"portfolio\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.project_description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/portfolio/\" + item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, item.title)), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: THEME.color\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, item.cats))));\n  }).splice(0, useCurrentWidth() > 576 ? 8 : 4)); // Randomizing array every time component re-rendering for better animation\n\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: [\"layout-header\", styles.header].join(\" \"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"subtitle\",\n    style: {\n      color: THEME.color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Our Portfolio\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, \"We proud to show you some famous projects.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, \"Energistically predominate high-payoff alignments whereas maintainable materials timely deliverables. Synergistically leverage other's holistic mindshare via high-payoff expertise.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.portfolio,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    key: \"all_projects\",\n    item: \"All Projects\",\n    active: active,\n    setActive: setActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), categories.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Button, {\n      key: index,\n      item: item,\n      active: active,\n      setActive: setActive,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    });\n  })), /*#__PURE__*/React.createElement(SpringGrid, {\n    component: \"ol\",\n    columns: window.outerWidth / itemWidth,\n    columnWidth: itemWidth,\n    itemHeight: width > 576 ? itemWidth : itemWidth / 1.5,\n    enter: enter,\n    entered: entered,\n    exit: exit,\n    springConfig: {\n      stiffness: 170,\n      damping: 26\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, portfolioList)));\n});\n\nvar Button = function Button(_ref2) {\n  var item = _ref2.item,\n      active = _ref2.active,\n      setActive = _ref2.setActive;\n\n  var _useHover = useHover(),\n      _useHover2 = _slicedToArray(_useHover, 2),\n      hoverRef = _useHover2[0],\n      isHovered = _useHover2[1];\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    ref: hoverRef,\n    onClick: function onClick() {\n      return setActive(item);\n    },\n    className: active === item ? styles.active : null,\n    style: {\n      color: active === item || isHovered ? THEME.color : null,\n      borderColor: active === item && THEME.color\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 5\n    }\n  }, item);\n};","map":{"version":3,"sources":["C:/Users/kang/Luna/GWproject/fe/src/components/widgets/Portfolio2/Portfolio2.js"],"names":["React","useState","useEffect","Fragment","SpringGrid","enterExitStyle","Link","useCurrentWidth","useHover","styles","THEME","data","active","setActive","width","itemWidth","setItemWidth","simple","enter","entered","exit","categories","Set","Array","prototype","concat","map","item","cats","split","cat","portfolioList","shuffleArray","filter","includes","index","height","img","project_description","id","title","color","splice","array","i","length","j","Math","floor","random","temp","header","join","portfolio","window","outerWidth","stiffness","damping","Button","hoverRef","isHovered","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment } from \"react\";\nimport { SpringGrid, enterExitStyle } from \"react-stonecutter\";\nimport { Link } from \"react-router-dom\";\nimport useCurrentWidth from \"../../../utilities/useCurrentWidth\";\nimport useHover from \"../../../utilities/useHover\";\nimport styles from \"./Portfolio2.module.scss\";\nimport THEME from \"../../../state/theme\";\n\nexport default ({ data = [] }) => {\n  // Active category (start with all)\n  const [active, setActive] = useState(\"All Projects\");\n\n  // Width of single portfolio item, calculation based on screen size\n  const width = useCurrentWidth();\n  const [itemWidth, setItemWidth] = useState(0);\n  useEffect(() => {\n    switch (true) {\n      case width > 1920:\n        setItemWidth(width / 5);\n        break;\n      case width > 992:\n        setItemWidth(width / 4);\n        break;\n      case width > 768:\n        setItemWidth(width / 3);\n        break;\n      case width > 576:\n        setItemWidth(width / 2);\n        break;\n      default:\n        setItemWidth(width);\n        break;\n    }\n  }, [width]);\n  //------------------------------------------------------------\n\n  // Animation styles for masonry component\n  const { enter, entered, exit } = enterExitStyle.simple;\n\n  // Take category tags from every item in database, and make array with unique values\n  const categories = [\n    ...new Set(\n      Array.prototype.concat(\n        ...data.map((item) => item.cats.split(\" \").map((cat) => cat))\n      )\n    ),\n  ];\n\n  // Creating array of jsx items for masonry grid\n  const portfolioList = shuffleArray(\n    data\n      .filter((item) => item.cats.includes(active) || active === \"All Projects\")\n      .map((item, index) => (\n        <div\n          key={index}\n          style={{\n            width: itemWidth,\n            height: width > 576 ? itemWidth : itemWidth / 1.5,\n          }}\n        >\n          <div className={styles.item}>\n            <img src={item.img} alt=\"portfolio\" />\n            <div className={styles.project_description}>\n              <Link to={\"/portfolio/\" + item.id}>\n                <h3>{item.title}</h3>\n              </Link>\n              <p style={{ color: THEME.color }}>{item.cats}</p>\n            </div>\n          </div>\n        </div>\n      ))\n      .splice(0, useCurrentWidth() > 576 ? 8 : 4)\n  );\n\n  // Randomizing array every time component re-rendering for better animation\n  function shuffleArray(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n\n    return array;\n  }\n\n  return (\n    <Fragment>\n      <div className={[\"layout-header\", styles.header].join(\" \")}>\n        <span className=\"subtitle\" style={{ color: THEME.color }}>\n          Our Portfolio\n        </span>\n        <h2>We proud to show you some famous projects.</h2>\n        <p>\n          Energistically predominate high-payoff alignments whereas maintainable\n          materials timely deliverables. Synergistically leverage other's\n          holistic mindshare via high-payoff expertise.\n        </p>\n      </div>\n      <div className={styles.portfolio}>\n        <ul>\n          <Button\n            key=\"all_projects\"\n            item=\"All Projects\"\n            active={active}\n            setActive={setActive}\n          />\n          {categories.map((item, index) => (\n            <Button\n              key={index}\n              item={item}\n              active={active}\n              setActive={setActive}\n            />\n          ))}\n        </ul>\n        <SpringGrid\n          component=\"ol\"\n          columns={window.outerWidth / itemWidth}\n          columnWidth={itemWidth}\n          itemHeight={width > 576 ? itemWidth : itemWidth / 1.5}\n          enter={enter}\n          entered={entered}\n          exit={exit}\n          springConfig={{ stiffness: 170, damping: 26 }}\n        >\n          {portfolioList}\n        </SpringGrid>\n      </div>\n    </Fragment>\n  );\n};\n\nconst Button = ({ item, active, setActive }) => {\n  const [hoverRef, isHovered] = useHover();\n\n  return (\n    <li\n      ref={hoverRef}\n      onClick={() => setActive(item)}\n      className={active === item ? styles.active : null}\n      style={{\n        color: active === item || isHovered ? THEME.color : null,\n        borderColor: active === item && THEME.color,\n      }}\n    >\n      {item}\n    </li>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}